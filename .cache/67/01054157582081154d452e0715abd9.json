{"id":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","dependencies":[{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/package.json","includedInParent":true,"mtime":1538670589222},{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/.babelrc","includedInParent":true,"mtime":1538670589206},{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/node_modules/google-maps-react/package.json","includedInParent":true,"mtime":1538672404602}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.cancelablePromise = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  // https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\n\n  var makeCancelable = exports.makeCancelable = function makeCancelable(promise) {\n    var hasCanceled_ = false;\n\n    var wrappedPromise = new Promise(function (resolve, reject) {\n      promise.then(function (val) {\n        return hasCanceled_ ? reject({ isCanceled: true }) : resolve(val);\n      });\n      promise.catch(function (error) {\n        return hasCanceled_ ? reject({ isCanceled: true }) : reject(error);\n      });\n    });\n\n    return {\n      promise: wrappedPromise,\n      cancel: function cancel() {\n        hasCanceled_ = true;\n      }\n    };\n  };\n});","map":{"mappings":[{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/cancelablePromise.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}}],"sources":{"../node_modules/google-maps-react/dist/lib/cancelablePromise.js":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([\"exports\"], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.cancelablePromise = mod.exports;\n  }\n})(this, function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  // https://facebook.github.io/react/blog/2015/12/16/ismounted-antipattern.html\n\n  var makeCancelable = exports.makeCancelable = function makeCancelable(promise) {\n    var hasCanceled_ = false;\n\n    var wrappedPromise = new Promise(function (resolve, reject) {\n      promise.then(function (val) {\n        return hasCanceled_ ? reject({ isCanceled: true }) : resolve(val);\n      });\n      promise.catch(function (error) {\n        return hasCanceled_ ? reject({ isCanceled: true }) : reject(error);\n      });\n    });\n\n    return {\n      promise: wrappedPromise,\n      cancel: function cancel() {\n        hasCanceled_ = true;\n      }\n    };\n  };\n});"},"lineCount":42}},"hash":"d44a632e1442f52f0440d371bb95a79d","cacheData":{"env":{}}}