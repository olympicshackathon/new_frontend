{"id":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","dependencies":[{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/package.json","includedInParent":true,"mtime":1538106543531},{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/.babelrc","includedInParent":true,"mtime":1538106542335},{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/node_modules/google-maps-react/package.json","includedInParent":true,"mtime":1538106627611},{"name":"./windowOrGlobal","loc":{"line":5,"column":33},"parent":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/node_modules/google-maps-react/dist/lib/ScriptCache.js","resolved":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/node_modules/google-maps-react/dist/lib/windowOrGlobal.js"}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './windowOrGlobal'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./windowOrGlobal'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.windowOrGlobal);\n        global.ScriptCache = mod.exports;\n    }\n})(this, function (exports, window) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var counter = 0;\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n    var ScriptCache = exports.ScriptCache = function (global) {\n        global._scriptMap = global._scriptMap || scriptMap;\n        return function ScriptCache(scripts) {\n            var Cache = {};\n\n            Cache._onLoad = function (key) {\n                return function (cb) {\n                    var registered = true;\n\n                    function unregister() {\n                        registered = false;\n                    }\n\n                    var stored = scriptMap.get(key);\n\n                    if (stored) {\n                        stored.promise.then(function () {\n                            if (registered) {\n                                stored.error ? cb(stored.error) : cb(null, stored);\n                            }\n\n                            return stored;\n                        });\n                    } else {\n                        // TODO:\n                    }\n\n                    return unregister;\n                };\n            };\n\n            Cache._scriptTag = function (key, src) {\n                if (!scriptMap.has(key)) {\n                    // Server side rendering environments don't always have access to the `document` global.\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\n                    if (typeof document === 'undefined') return null;\n\n                    var tag = document.createElement('script');\n                    var promise = new Promise(function (resolve, reject) {\n                        var resolved = false,\n                            errored = false,\n                            body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        var cbName = 'loaderCB' + counter++ + Date.now();\n                        var cb = void 0;\n\n                        var handleResult = function handleResult(state) {\n                            return function (evt) {\n                                var stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n                                stored.loaded = true;\n\n                                cleanup();\n                            };\n                        };\n\n                        var cleanup = function cleanup() {\n                            if (global[cbName] && typeof global[cbName] === 'function') {\n                                global[cbName] = null;\n                                delete global[cbName];\n                            }\n                        };\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = function () {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n                            cb = window[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n\n                        return tag;\n                    });\n                    var initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag: tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key);\n            };\n\n            // let scriptTags = document.querySelectorAll('script')\n            //\n            // NodeList.prototype.filter = Array.prototype.filter;\n            // NodeList.prototype.map = Array.prototype.map;\n            // const initialScripts = scriptTags\n            //   .filter(s => !!s.src)\n            //   .map(s => s.src.split('?')[0])\n            //   .reduce((memo, script) => {\n            //     memo[script] = script;\n            //     return memo;\n            //   }, {});\n\n            Object.keys(scripts).forEach(function (key) {\n                var script = scripts[key];\n\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n\n                Cache[key] = {\n                    tag: tag,\n                    onLoad: Cache._onLoad(key)\n                };\n            });\n\n            return Cache;\n        };\n    }(window);\n\n    exports.default = ScriptCache;\n});","map":{"mappings":[{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/ScriptCache.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}}],"sources":{"../node_modules/google-maps-react/dist/lib/ScriptCache.js":"(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './windowOrGlobal'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./windowOrGlobal'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.windowOrGlobal);\n        global.ScriptCache = mod.exports;\n    }\n})(this, function (exports, window) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var counter = 0;\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n    var ScriptCache = exports.ScriptCache = function (global) {\n        global._scriptMap = global._scriptMap || scriptMap;\n        return function ScriptCache(scripts) {\n            var Cache = {};\n\n            Cache._onLoad = function (key) {\n                return function (cb) {\n                    var registered = true;\n\n                    function unregister() {\n                        registered = false;\n                    }\n\n                    var stored = scriptMap.get(key);\n\n                    if (stored) {\n                        stored.promise.then(function () {\n                            if (registered) {\n                                stored.error ? cb(stored.error) : cb(null, stored);\n                            }\n\n                            return stored;\n                        });\n                    } else {\n                        // TODO:\n                    }\n\n                    return unregister;\n                };\n            };\n\n            Cache._scriptTag = function (key, src) {\n                if (!scriptMap.has(key)) {\n                    // Server side rendering environments don't always have access to the `document` global.\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\n                    if (typeof document === 'undefined') return null;\n\n                    var tag = document.createElement('script');\n                    var promise = new Promise(function (resolve, reject) {\n                        var resolved = false,\n                            errored = false,\n                            body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        var cbName = 'loaderCB' + counter++ + Date.now();\n                        var cb = void 0;\n\n                        var handleResult = function handleResult(state) {\n                            return function (evt) {\n                                var stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n                                stored.loaded = true;\n\n                                cleanup();\n                            };\n                        };\n\n                        var cleanup = function cleanup() {\n                            if (global[cbName] && typeof global[cbName] === 'function') {\n                                global[cbName] = null;\n                                delete global[cbName];\n                            }\n                        };\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = function () {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n                            cb = window[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n\n                        return tag;\n                    });\n                    var initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag: tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key);\n            };\n\n            // let scriptTags = document.querySelectorAll('script')\n            //\n            // NodeList.prototype.filter = Array.prototype.filter;\n            // NodeList.prototype.map = Array.prototype.map;\n            // const initialScripts = scriptTags\n            //   .filter(s => !!s.src)\n            //   .map(s => s.src.split('?')[0])\n            //   .reduce((memo, script) => {\n            //     memo[script] = script;\n            //     return memo;\n            //   }, {});\n\n            Object.keys(scripts).forEach(function (key) {\n                var script = scripts[key];\n\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n\n                Cache[key] = {\n                    tag: tag,\n                    onLoad: Cache._onLoad(key)\n                };\n            });\n\n            return Cache;\n        };\n    }(window);\n\n    exports.default = ScriptCache;\n});"},"lineCount":158}},"hash":"480a38f66130b1cefda100c1b3cc2036","cacheData":{"env":{}}}