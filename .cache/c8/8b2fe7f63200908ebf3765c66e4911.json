{"id":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","dependencies":[{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/package.json","includedInParent":true,"mtime":1538106543531},{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/.babelrc","includedInParent":true,"mtime":1538106542335},{"name":"/nfs/2018/r/rhayat/Desktop/Work/Tests/frontend/node_modules/google-maps-react/package.json","includedInParent":true,"mtime":1538106627611}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two path arrays of LatLng objects.\n   */\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});","map":{"mappings":[{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/google-maps-react/dist/lib/arePathsEqual.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}}],"sources":{"../node_modules/google-maps-react/dist/lib/arePathsEqual.js":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.arePathsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two path arrays of LatLng objects.\n   */\n\n  var arePathsEqual = exports.arePathsEqual = function arePathsEqual(pathA, pathB) {\n    if (pathA === pathB) {\n      return true;\n    }\n    if (!Array.isArray(pathA) || !Array.isArray(pathB)) {\n      return false;\n    }\n    if (pathA.length !== pathB.length) {\n      return false;\n    }\n    for (var i = 0; i < pathA.length; ++i) {\n      if (pathA[i] === pathB[i]) {\n        continue;\n      }\n      if (!isValidLatLng(pathA[i]) || !isValidLatLng(pathB[i])) {\n        return false;\n      }\n      if (pathB[i].lat !== pathA[i].lat || pathB[i].lng !== pathA[i].lng) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var isValidLatLng = function isValidLatLng(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('lat') && elem.hasOwnProperty('lng');\n  };\n});"},"lineCount":65}},"hash":"70f09f6bdda9454f0529858fa78f8e8e","cacheData":{"env":{}}}