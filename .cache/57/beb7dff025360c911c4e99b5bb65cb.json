{"id":"../node_modules/validator/lib/isMimeType.js","dependencies":[{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/package.json","includedInParent":true,"mtime":1538670589222},{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/.babelrc","includedInParent":true,"mtime":1538670589206},{"name":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/node_modules/validator/package.json","includedInParent":true,"mtime":1538672409058},{"name":"./util/assertString","loc":{"line":8,"column":28},"parent":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/node_modules/validator/lib/isMimeType.js","resolved":"/nfs/2018/b/bbixby/Desktop/cadet/olympics/new_frontend/node_modules/validator/lib/util/assertString.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\n\n\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\n// Handle \"charset\" in \"text/*\"\n\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n// Handle \"boundary\" in \"multipart/*\"\n\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString2.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\n\nmodule.exports = exports['default'];","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":1,"column":0}},{"name":"Object","generated":{"line":3,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":6},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":6}},{"name":"defineProperty","generated":{"line":3,"column":7},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":7}},{"generated":{"line":3,"column":21},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":0}},{"name":"exports","generated":{"line":3,"column":22},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":22}},{"generated":{"line":3,"column":29},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":31},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":31}},{"generated":{"line":3,"column":43},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":45},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":45}},{"name":"value","generated":{"line":4,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":4,"column":2}},{"name":"value","generated":{"line":4,"column":2},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":4,"column":2}},{"generated":{"line":4,"column":7},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":4,"column":7}},{"generated":{"line":4,"column":9},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":4,"column":9}},{"generated":{"line":5,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":45}},{"generated":{"line":5,"column":1},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":3,"column":0}},{"name":"exports","generated":{"line":6,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":7},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":7}},{"name":"default","generated":{"line":6,"column":8},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":8}},{"generated":{"line":6,"column":15},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":0}},{"name":"isMimeType","generated":{"line":6,"column":18},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":18}},{"generated":{"line":6,"column":28},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":6,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":0}},{"name":"_assertString","generated":{"line":8,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":4}},{"generated":{"line":8,"column":17},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":17}},{"name":"require","generated":{"line":8,"column":20},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":20}},{"generated":{"line":8,"column":27},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":27}},{"generated":{"line":8,"column":28},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":28}},{"generated":{"line":8,"column":49},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":27}},{"generated":{"line":8,"column":50},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":8,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":0}},{"name":"_assertString2","generated":{"line":10,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":4}},{"generated":{"line":10,"column":18},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":18}},{"name":"_interopRequireDefault","generated":{"line":10,"column":21},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":21}},{"generated":{"line":10,"column":43},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":43}},{"name":"_assertString","generated":{"line":10,"column":44},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":44}},{"generated":{"line":10,"column":57},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":43}},{"generated":{"line":10,"column":58},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":10,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":0}},{"name":"_interopRequireDefault","generated":{"line":12,"column":9},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":9}},{"generated":{"line":12,"column":31},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":0}},{"name":"obj","generated":{"line":12,"column":32},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":32}},{"generated":{"line":12,"column":35},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":0}},{"generated":{"line":12,"column":37},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":37}},{"generated":{"line":13,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":39}},{"name":"obj","generated":{"line":13,"column":9},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":46}},{"generated":{"line":13,"column":12},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":49}},{"name":"obj","generated":{"line":13,"column":16},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":53}},{"generated":{"line":13,"column":19},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":56}},{"name":"__esModule","generated":{"line":13,"column":20},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":57}},{"generated":{"line":13,"column":30},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":46}},{"name":"obj","generated":{"line":13,"column":33},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":70}},{"generated":{"line":13,"column":36},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":46}},{"generated":{"line":13,"column":39},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":76}},{"name":"default","generated":{"line":14,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":78}},{"name":"default","generated":{"line":14,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":78}},{"generated":{"line":14,"column":11},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":85}},{"name":"obj","generated":{"line":14,"column":13},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":87}},{"generated":{"line":15,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":76}},{"generated":{"line":15,"column":3},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":39}},{"generated":{"line":16,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":12,"column":95}},{"generated":{"line":17,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":14,"column":0}},{"generated":{"line":38,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":36,"column":0}},{"generated":{"line":39,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":37,"column":0}},{"generated":{"line":40,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":38,"column":0}},{"generated":{"line":41,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":39,"column":0}},{"generated":{"line":44,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":0}},{"name":"mimeTypeSimple","generated":{"line":44,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":4}},{"generated":{"line":44,"column":18},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":18}},{"generated":{"line":44,"column":21},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":21}},{"generated":{"line":44,"column":117},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":0}},{"generated":{"line":44,"column":119},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":40,"column":119}},{"generated":{"line":45,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":42,"column":0}},{"generated":{"line":47,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":0}},{"name":"mimeTypeText","generated":{"line":47,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":4}},{"generated":{"line":47,"column":16},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":16}},{"generated":{"line":47,"column":19},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":19}},{"generated":{"line":47,"column":154},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":0}},{"generated":{"line":47,"column":156},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":43,"column":156}},{"generated":{"line":48,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":45,"column":0}},{"generated":{"line":50,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":0}},{"name":"mimeTypeMultipart","generated":{"line":50,"column":4},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":4}},{"generated":{"line":50,"column":21},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":21}},{"generated":{"line":50,"column":24},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":24}},{"generated":{"line":50,"column":182},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":0}},{"generated":{"line":50,"column":184},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":46,"column":184}},{"generated":{"line":52,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":0}},{"name":"isMimeType","generated":{"line":52,"column":9},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":9}},{"generated":{"line":52,"column":19},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":0}},{"name":"str","generated":{"line":52,"column":20},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":20}},{"generated":{"line":52,"column":23},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":0}},{"generated":{"line":52,"column":25},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":48,"column":25}},{"generated":{"line":53,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":2}},{"generated":{"line":53,"column":3},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":3}},{"name":"_assertString2","generated":{"line":53,"column":6},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":6}},{"generated":{"line":53,"column":20},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":20}},{"name":"default","generated":{"line":53,"column":21},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":21}},{"generated":{"line":53,"column":28},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":2}},{"name":"str","generated":{"line":53,"column":30},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":30}},{"generated":{"line":53,"column":33},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":49,"column":2}},{"generated":{"line":54,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":2}},{"name":"mimeTypeSimple","generated":{"line":54,"column":9},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":9}},{"generated":{"line":54,"column":23},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":23}},{"name":"test","generated":{"line":54,"column":24},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":24}},{"generated":{"line":54,"column":28},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":9}},{"name":"str","generated":{"line":54,"column":29},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":29}},{"generated":{"line":54,"column":32},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":9}},{"name":"mimeTypeText","generated":{"line":54,"column":37},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":37}},{"generated":{"line":54,"column":49},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":49}},{"name":"test","generated":{"line":54,"column":50},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":50}},{"generated":{"line":54,"column":54},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":37}},{"name":"str","generated":{"line":54,"column":55},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":55}},{"generated":{"line":54,"column":58},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":37}},{"generated":{"line":54,"column":59},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":9}},{"name":"mimeTypeMultipart","generated":{"line":54,"column":63},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":63}},{"generated":{"line":54,"column":80},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":80}},{"name":"test","generated":{"line":54,"column":81},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":81}},{"generated":{"line":54,"column":85},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":63}},{"name":"str","generated":{"line":54,"column":86},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":86}},{"generated":{"line":54,"column":89},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":63}},{"generated":{"line":54,"column":90},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":50,"column":2}},{"generated":{"line":55,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":51,"column":1}},{"name":"module","generated":{"line":57,"column":0},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":0}},{"generated":{"line":57,"column":6},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":6}},{"name":"exports","generated":{"line":57,"column":7},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":7}},{"generated":{"line":57,"column":14},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":0}},{"name":"exports","generated":{"line":57,"column":17},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":17}},{"generated":{"line":57,"column":24},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":24}},{"generated":{"line":57,"column":25},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":25}},{"generated":{"line":57,"column":34},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":24}},{"generated":{"line":57,"column":35},"source":"../node_modules/validator/lib/isMimeType.js","original":{"line":52,"column":0}}],"sources":{"../node_modules/validator/lib/isMimeType.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isMimeType;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  Checks if the provided string matches to a correct Media type format (MIME type)\n\n  This function only checks is the string format follows the\n  etablished rules by the according RFC specifications.\n  This function supports 'charset' in textual media types\n  (https://tools.ietf.org/html/rfc6657).\n\n  This function does not check against all the media types listed\n  by the IANA (https://www.iana.org/assignments/media-types/media-types.xhtml)\n  because of lightness purposes : it would require to include\n  all these MIME types in this librairy, which would weigh it\n  significantly. This kind of effort maybe is not worth for the use that\n  this function has in this entire librairy.\n\n  More informations in the RFC specifications :\n  - https://tools.ietf.org/html/rfc2045\n  - https://tools.ietf.org/html/rfc2046\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.1\n  - https://tools.ietf.org/html/rfc7231#section-3.1.1.5\n*/\n\n// Match simple MIME types\n// NB :\n//   Subtype length must not exceed 100 characters.\n//   This rule does not comply to the RFC specs (what is the max length ?).\nvar mimeTypeSimple = /^(application|audio|font|image|message|model|multipart|text|video)\\/[a-zA-Z0-9\\.\\-\\+]{1,100}$/i; // eslint-disable-line max-len\n\n// Handle \"charset\" in \"text/*\"\nvar mimeTypeText = /^text\\/[a-zA-Z0-9\\.\\-\\+]{1,100};\\s?charset=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?$/i; // eslint-disable-line max-len\n\n// Handle \"boundary\" in \"multipart/*\"\nvar mimeTypeMultipart = /^multipart\\/[a-zA-Z0-9\\.\\-\\+]{1,100}(;\\s?(boundary|charset)=(\"[a-zA-Z0-9\\.\\-\\+\\s]{0,70}\"|[a-zA-Z0-9\\.\\-\\+]{0,70})(\\s?\\([a-zA-Z0-9\\.\\-\\+\\s]{1,20}\\))?){0,2}$/i; // eslint-disable-line max-len\n\nfunction isMimeType(str) {\n  (0, _assertString2.default)(str);\n  return mimeTypeSimple.test(str) || mimeTypeText.test(str) || mimeTypeMultipart.test(str);\n}\nmodule.exports = exports['default'];"},"lineCount":null}},"hash":"54dfc52848f8adc692a572b313f45ac4","cacheData":{"env":{}}}